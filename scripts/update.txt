MATCH (l:Locality) 
WHERE exists(l.endonim)
CREATE (e:Endonim { name: l.endonim, writing: l.endonimWriting, language: l.endonimLanguage, latin: l.endonimLatin })<-[:Has]-(l);

MATCH (l:Locality)
WHERE exists(l.endonim)
REMOVE l.endonim, l.endonimWriting, l.endonimLanguage, l.endonimLatin;

MATCH (l:Locality) WHERE l.gmina="Ryki" SET l.gmina="Ryki-miasto";

MATCH (l:Locality)
WHERE size(split(l.gmina, "-")) > 2
RETURN l.gmina, reverse(tail(reverse(split(l.gmina, "-")))) AS nazwa, last(split(l.gmina, "-")) AS typ
LIMIT 100;

MATCH (l:Locality)
RETURN l.gmina, last(split(l.gmina, "-")) AS typ, substring(l.gmina, 0, size(l.gmina) - size(last(split(l.gmina, "-"))) - 1) AS nazwa
LIMIT 100;

MATCH (l:Locality)
SET l.gminaType = last(split(l.gmina, "-")), l.gmina = substring(l.gmina, 0, size(l.gmina) - size(last(split(l.gmina, "-"))) - 1);


# uzupełnienie długosci i szerokości geograficznej o określenie: wschodnia (E), północna (N).
MATCH (l:Locality)
SET l.longitude = l.longitude + "E", l.latitude = l.latitude + "N";

# obliczenie wartości liczbowych długosci i szerokości geograficznej
MATCH (l:Locality)
WITH substring(l.longitude, 0, 2) AS d, substring(l.longitude, 3, 2) AS dm, substring(l.longitude, 6, 2) AS ds, l AS l
WITH substring(l.latitude, 0, 2) AS s, substring(l.latitude, 3, 2) AS sm, substring(l.latitude, 6, 2) AS ss, d AS d, dm AS dm, ds AS ds, l AS l
WITH toFloat(d) AS D, toFloat(dm) AS DM, toFloat(ds) AS DS, toFloat(s) AS S, toFloat(sm) AS SM, toFloat(ss) AS SS, l AS l
SET l.lat = S + SM/60 + SS/3600, l.lon = D + DM/60 + DS/3600;


# zmiana nazw pól - dopasowanie do nazw w Locality.
MATCH (l:Locality)
SET l.historicalNote = l.historicalNameNote,
	l.collateralName = l.otherName, l.collateralNote = l.otherNameNote,  
	l.foreignName = l.additName, l.foreignLanguageCode = l.additNameLanguageCode, l.foreignLanguage = l.additNameLanguage, l.foreignLatin = l.additNameLatin,
	l.mainNote = l.note;

MATCH (l:Locality)
REMOVE l.historicalNameNote,
	l.otherName, l.otherNameNote,
	l.additName, l.additNameLanguageCode, l.additNameLanguage, l.additNameLatin,
	l.note;


# zamiana endonimu na nazwę obcą (2 recordy)
MATCH (l:Locality) WHERE exists(l.endonim)
SET l.foreignName = l.endonim, l.foreignLanguageCode = l.endonimWriting, l.foreignLanguage = l.endonimLanguage;

MATCH (l:Locality) WHERE exists(l.endonim)
REMOVE l.endonim, l.endonimWriting, l.endonimLanguage;


# Dodanie pól do przechowywania nazw pisanych małą literą, do wyszukiwań typu 'ignore case'
MATCH (l:Locality)
SET l._name = toLower(l.name);

MATCH (l:Locality) WHERE exists(l.historicalName)
SET l._historicalName = toLower(l.historicalName);

MATCH (l:Locality) WHERE exists(l.collateralName)
SET l._collateralName = toLower(l.collateralName);

MATCH (l:Locality) WHERE exists(l.foreignName)
SET l._foreignName = toLower(l.foreignName);

MATCH (l:Locality) WHERE exists(l.foreignLatin)
SET l._foreignLatin = toLower(l.foreignLatin);
